@startuml

interface Cache {
	Get(Key) (Value, Boolean)
	Put(Key, Value)
	Delete(Key)
	Clear()
}
interface Decorator
interface DecoratorFactory

Decorator --|> Cache
interface DecoratorFactory
DecoratorFactory --> Decorator
DecoratorFactory --> Cache


interface Getter {
	Get(Key, Value)
}

class FallbackGetter {
	New(Cache, Getter)
}
note top of FallbackGetter
	Getter that tries to return the Value at the Key from the Cache, using
	the fallback Getter and storing the Value if the Cache doesn't have the
	value.
end note

FallbackGetter o--> Cache
FallbackGetter --|> Getter
FallbackGetter o--> Getter

class GetterFunc {
	New(func(Key) Value)
}
GetterFunc --|> Getter

@enduml
